<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-3.0.xsd 
	http://www.springframework.org/schema/tx  
	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd 
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.0.xsd">
	
	<context:component-scan base-package="com.jc_hotel"/>
	
	<!-- 配置DataSource数据源 -->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver"/>
		<property name="url" value="jdbc:mysql://localhost:3306/jc_hotel"/>
		<property name="username" value="root"/>
		<property name="password" value="root"/>
	</bean>
	
	<!-- 配置SqlSessionFactoryBean -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<!-- mapper和resultmap配置路径 -->
		<property name="mapperLocations">
			<list>
				<!-- 表示在com.wangku.mapper包或以下所有目录中，以-resultmap.xml结尾所有文件 -->
				<value>classpath:mapper/*Mapper.xml</value>
			</list>
		</property>
	</bean>
	
	<!-- 单独配置一个Mapper； 这种模式就是得给每个mapper接口配置一个bean -->
	<!-- 
	<bean id="accountMapper" class="org.mybatis.spring.mapper.MapperFactoryBean"> 
		<property name="mapperInterface" value="com.hoo.mapper.AccountMapper" />
		<property name="sqlSessionFactory" ref="sqlSessionFactory" /> 
	</bean> 
	
	<bean id="companyMapper" class="org.mybatis.spring.mapper.MapperFactoryBean"> 
		<property name="mapperInterface" value="com.hoo.mapper.CompanyMapper" />
		<property name="sqlSessionFactory" ref="sqlSessionFactory" /> 
	</bean>
	 --> 
	 
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.jc_hotel.mapper"/>
	</bean>
	
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
		<constructor-arg index="1" value="BATCH" />
	</bean>
	
	 <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<tx:annotation-driven transaction-manager="transactionManager"/>
	<context:annotation-config/>
   	
	<!--
		<tx:advice id="txAdvice" transaction-manager="transactionManager">
			<tx:attributes>
				<tx:method name="list*" propagation="REQUIRED" read-only="true" />
				<tx:method name="get*" propagation="REQUIRED" read-only="true" />
				<tx:method name="find*" propagation="REQUIRED" read-only="true" />
				<tx:method name="query*" propagation="REQUIRED" read-only="true" />
				<tx:method name="*" propagation="REQUIRED" />
			</tx:attributes>
		</tx:advice>
	
		<aop:config>
			<aop:pointcut id="serviceMethods"
				expression="execution(* com.wangku.*.service.*.*(..))" />
			<aop:advisor advice-ref="txAdvice" pointcut-ref="serviceMethods" />
		</aop:config>
    -->
</beans>
